{"ast":null,"code":"var _jsxFileName = \"/Users/denianclosshoerlle/projetos/omnistack7/web/src/pages/new/new.js\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { createPost } from \"../../services\";\nimport { Loader } from \"../../components\";\nimport * as s from \"./styled-new\";\nexport default (() => {\n  const [image, setImage] = useState({});\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const submit = ({\n    author,\n    place,\n    description,\n    hashtags\n  }) => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"author\", author);\n    formData.append(\"place\", place);\n    formData.append(\"description\", description);\n    formData.append(\"hashtags\", hashtags);\n    setLoading(true);\n    createPost(formData).then(() => {\n      setLoading(false);\n    }).catch(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(s.NewPost, {\n    onSubmit: handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(s.InputFile, {\n    for: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, image.name || \"Escolher Foto\"), /*#__PURE__*/React.createElement(s.Input, {\n    name: \"author\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Autor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(s.Input, {\n    name: \"place\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Lugar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(s.Input, {\n    name: \"description\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Descri\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(s.Input, {\n    name: \"hashtags\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"#Hastags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(s.Button, {\n    disabled: loading || image,\n    type: \"submit\",\n    value: \"Enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    onChange: ({\n      target\n    }) => target.files[0] && setImage(target.files[0]),\n    type: \"file\",\n    id: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/denianclosshoerlle/projetos/omnistack7/web/src/pages/new/new.js"],"names":["React","useState","useForm","createPost","Loader","s","image","setImage","loading","setLoading","register","handleSubmit","submit","author","place","description","hashtags","formData","FormData","append","then","catch","name","required","display","target","files"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { createPost } from \"../../services\";\nimport { Loader } from \"../../components\";\nimport * as s from \"./styled-new\";\n\nexport default () => {\n  const [image, setImage] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { register, handleSubmit } = useForm();\n\n  const submit = ({ author, place, description, hashtags }) => {\n    const formData = new FormData();\n\n    formData.append(\"image\", image);\n    formData.append(\"author\", author);\n    formData.append(\"place\", place);\n    formData.append(\"description\", description);\n    formData.append(\"hashtags\", hashtags);\n\n    setLoading(true);\n    createPost(formData)\n      .then(() => {\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <s.NewPost onSubmit={handleSubmit(submit)}>\n        <s.InputFile for=\"file\">{image.name || \"Escolher Foto\"}</s.InputFile>\n\n        <s.Input\n          name=\"author\"\n          ref={register({ required: true })}\n          placeholder=\"Autor\"\n        />\n        <s.Input\n          name=\"place\"\n          ref={register({ required: true })}\n          placeholder=\"Lugar\"\n        />\n        <s.Input\n          name=\"description\"\n          ref={register({ required: true })}\n          placeholder=\"Descrição\"\n        />\n        <s.Input\n          name=\"hashtags\"\n          ref={register({ required: true })}\n          placeholder=\"#Hastags\"\n        />\n\n        <s.Button disabled={loading || image} type=\"submit\" value=\"Enviar\" />\n        {loading && <Loader />}\n      </s.NewPost>\n      <input\n        style={{ display: \"none\" }}\n        onChange={({ target }) => target.files[0] && setImage(target.files[0])}\n        type=\"file\"\n        id=\"file\"\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}